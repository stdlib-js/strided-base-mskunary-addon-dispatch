// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-typed-array-like@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/strided-base-dtype-resolve-enum@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/strided-base-reinterpret-complex64@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/strided-base-reinterpret-complex128@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.0.2-esm/index.mjs";import{isPrimitive as l}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/strided-base-offset-view@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/strided-base-min-view-buffer-index@esm/index.mjs";var p=n("complex64"),a=n("complex128");function u(e,l){if(!r(e))throw new TypeError(o("null3p",e));if(!r(l))throw new TypeError(o("null2S",l));return function(r,d,m,u,f,j,h,v,g,c){var b,w;if(!t(m)||!t(g)||!t(j))return l(r,d,m,u,f,j,h,v,g,c),g;if(d=n(d),v=n(v),f=n(f),null===d||null===v||null===f)throw new TypeError(o("null1S"));b=d===p?s(m,0):d===a?i(m,0):m;w=v===p?s(g,0):v===a?i(g,0):g;return e(r,d,b,u,f,j,h,v,w,c),g}}var f=n("complex64"),j=n("complex128");function h(e,p){if(!r(e))throw new TypeError(o("null3p",e));if(!r(p))throw new TypeError(o("null2S",p));return function(r,a,u,h,v,g,c,b,w,y,x,E,T){var S,V,k;if(!t(u)||!t(x)||!t(c))return p(r,a,u,h,v,g,c,b,w,y,x,E,T),x;if(a=n(a),y=n(y),g=n(g),null===a||null===y||null===g)throw new TypeError(o("null1S"));if(!l(v))throw new TypeError(o("invalid argument. Input array offset must be a nonnegative integer. Value: `%s`.",v));if(!l(T))throw new TypeError(o("invalid argument. Output array offset must be a nonnegative integer. Value: `%s`.",T));if(!l(w))throw new TypeError(o("invalid argument. Mask array offset must be a nonnegative integer. Value: `%s`.",w));v=m(r,h,v),T=m(r,E,T),w=m(r,b,w),V=a===f?s(u,v):a===j?i(u,v):d(u,v);k=y===f?s(x,T):y===j?i(x,T):d(x,T);return S=d(c,w),e(r,a,V,h,g,S,b,y,k,E),x}}e(u,"ndarray",h);export{u as default,h as ndarray};
//# sourceMappingURL=index.mjs.map
